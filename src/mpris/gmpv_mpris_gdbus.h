/*
 * Generated by gdbus-codegen 2.48.1. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MPRIS_GMPV_MPRIS_GDBUS_H__
#define __MPRIS_GMPV_MPRIS_GDBUS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2 */

#define GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2 (gmpv_mpris_org_mpris_media_player2_get_type ())
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2, gmpvmprisOrgMprisMediaPlayer2))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2, gmpvmprisOrgMprisMediaPlayer2Iface))

struct _gmpvmprisOrgMprisMediaPlayer2;
typedef struct _gmpvmprisOrgMprisMediaPlayer2 gmpvmprisOrgMprisMediaPlayer2;
typedef struct _gmpvmprisOrgMprisMediaPlayer2Iface gmpvmprisOrgMprisMediaPlayer2Iface;

struct _gmpvmprisOrgMprisMediaPlayer2Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_quit) (
    gmpvmprisOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_raise) (
    gmpvmprisOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_quit) (gmpvmprisOrgMprisMediaPlayer2 *object);

  gboolean  (*get_can_raise) (gmpvmprisOrgMprisMediaPlayer2 *object);

  gboolean  (*get_can_set_fullscreen) (gmpvmprisOrgMprisMediaPlayer2 *object);

  const gchar * (*get_desktop_entry) (gmpvmprisOrgMprisMediaPlayer2 *object);

  gboolean  (*get_fullscreen) (gmpvmprisOrgMprisMediaPlayer2 *object);

  gboolean  (*get_has_track_list) (gmpvmprisOrgMprisMediaPlayer2 *object);

  const gchar * (*get_identity) (gmpvmprisOrgMprisMediaPlayer2 *object);

  const gchar *const * (*get_supported_mime_types) (gmpvmprisOrgMprisMediaPlayer2 *object);

  const gchar *const * (*get_supported_uri_schemes) (gmpvmprisOrgMprisMediaPlayer2 *object);

};

GType gmpv_mpris_org_mpris_media_player2_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gmpv_mpris_org_mpris_media_player2_interface_info (void);
guint gmpv_mpris_org_mpris_media_player2_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gmpv_mpris_org_mpris_media_player2_complete_raise (
    gmpvmprisOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_complete_quit (
    gmpvmprisOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void gmpv_mpris_org_mpris_media_player2_call_raise (
    gmpvmprisOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_call_raise_finish (
    gmpvmprisOrgMprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_call_raise_sync (
    gmpvmprisOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_call_quit (
    gmpvmprisOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_call_quit_finish (
    gmpvmprisOrgMprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_call_quit_sync (
    gmpvmprisOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean gmpv_mpris_org_mpris_media_player2_get_can_quit (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_can_quit (gmpvmprisOrgMprisMediaPlayer2 *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_get_fullscreen (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_fullscreen (gmpvmprisOrgMprisMediaPlayer2 *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_get_can_set_fullscreen (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_can_set_fullscreen (gmpvmprisOrgMprisMediaPlayer2 *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_get_can_raise (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_can_raise (gmpvmprisOrgMprisMediaPlayer2 *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_get_has_track_list (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_has_track_list (gmpvmprisOrgMprisMediaPlayer2 *object, gboolean value);

const gchar *gmpv_mpris_org_mpris_media_player2_get_identity (gmpvmprisOrgMprisMediaPlayer2 *object);
gchar *gmpv_mpris_org_mpris_media_player2_dup_identity (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_identity (gmpvmprisOrgMprisMediaPlayer2 *object, const gchar *value);

const gchar *gmpv_mpris_org_mpris_media_player2_get_desktop_entry (gmpvmprisOrgMprisMediaPlayer2 *object);
gchar *gmpv_mpris_org_mpris_media_player2_dup_desktop_entry (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_desktop_entry (gmpvmprisOrgMprisMediaPlayer2 *object, const gchar *value);

const gchar *const *gmpv_mpris_org_mpris_media_player2_get_supported_uri_schemes (gmpvmprisOrgMprisMediaPlayer2 *object);
gchar **gmpv_mpris_org_mpris_media_player2_dup_supported_uri_schemes (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_supported_uri_schemes (gmpvmprisOrgMprisMediaPlayer2 *object, const gchar *const *value);

const gchar *const *gmpv_mpris_org_mpris_media_player2_get_supported_mime_types (gmpvmprisOrgMprisMediaPlayer2 *object);
gchar **gmpv_mpris_org_mpris_media_player2_dup_supported_mime_types (gmpvmprisOrgMprisMediaPlayer2 *object);
void gmpv_mpris_org_mpris_media_player2_set_supported_mime_types (gmpvmprisOrgMprisMediaPlayer2 *object, const gchar *const *value);


/* ---- */

#define GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY (gmpv_mpris_org_mpris_media_player2_proxy_get_type ())
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, gmpvmprisOrgMprisMediaPlayer2Proxy))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, gmpvmprisOrgMprisMediaPlayer2ProxyClass))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, gmpvmprisOrgMprisMediaPlayer2ProxyClass))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY))

typedef struct _gmpvmprisOrgMprisMediaPlayer2Proxy gmpvmprisOrgMprisMediaPlayer2Proxy;
typedef struct _gmpvmprisOrgMprisMediaPlayer2ProxyClass gmpvmprisOrgMprisMediaPlayer2ProxyClass;
typedef struct _gmpvmprisOrgMprisMediaPlayer2ProxyPrivate gmpvmprisOrgMprisMediaPlayer2ProxyPrivate;

struct _gmpvmprisOrgMprisMediaPlayer2Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  gmpvmprisOrgMprisMediaPlayer2ProxyPrivate *priv;
};

struct _gmpvmprisOrgMprisMediaPlayer2ProxyClass
{
  GDBusProxyClass parent_class;
};

GType gmpv_mpris_org_mpris_media_player2_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (gmpvmprisOrgMprisMediaPlayer2Proxy, g_object_unref)
#endif

void gmpv_mpris_org_mpris_media_player2_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
gmpvmprisOrgMprisMediaPlayer2 *gmpv_mpris_org_mpris_media_player2_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
gmpvmprisOrgMprisMediaPlayer2 *gmpv_mpris_org_mpris_media_player2_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gmpv_mpris_org_mpris_media_player2_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
gmpvmprisOrgMprisMediaPlayer2 *gmpv_mpris_org_mpris_media_player2_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
gmpvmprisOrgMprisMediaPlayer2 *gmpv_mpris_org_mpris_media_player2_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON (gmpv_mpris_org_mpris_media_player2_skeleton_get_type ())
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, gmpvmprisOrgMprisMediaPlayer2Skeleton))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, gmpvmprisOrgMprisMediaPlayer2SkeletonClass))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, gmpvmprisOrgMprisMediaPlayer2SkeletonClass))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON))

typedef struct _gmpvmprisOrgMprisMediaPlayer2Skeleton gmpvmprisOrgMprisMediaPlayer2Skeleton;
typedef struct _gmpvmprisOrgMprisMediaPlayer2SkeletonClass gmpvmprisOrgMprisMediaPlayer2SkeletonClass;
typedef struct _gmpvmprisOrgMprisMediaPlayer2SkeletonPrivate gmpvmprisOrgMprisMediaPlayer2SkeletonPrivate;

struct _gmpvmprisOrgMprisMediaPlayer2Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  gmpvmprisOrgMprisMediaPlayer2SkeletonPrivate *priv;
};

struct _gmpvmprisOrgMprisMediaPlayer2SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gmpv_mpris_org_mpris_media_player2_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (gmpvmprisOrgMprisMediaPlayer2Skeleton, g_object_unref)
#endif

gmpvmprisOrgMprisMediaPlayer2 *gmpv_mpris_org_mpris_media_player2_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2.Player */

#define GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER (gmpv_mpris_org_mpris_media_player2_player_get_type ())
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER, gmpvmprisOrgMprisMediaPlayer2Player))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER, gmpvmprisOrgMprisMediaPlayer2PlayerIface))

struct _gmpvmprisOrgMprisMediaPlayer2Player;
typedef struct _gmpvmprisOrgMprisMediaPlayer2Player gmpvmprisOrgMprisMediaPlayer2Player;
typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerIface gmpvmprisOrgMprisMediaPlayer2PlayerIface;

struct _gmpvmprisOrgMprisMediaPlayer2PlayerIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_next) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_open_uri) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_Uri);

  gboolean (*handle_pause) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_play) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_play_pause) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_previous) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_seek) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation,
    gint64 arg_Offset);

  gboolean (*handle_set_position) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_TrackId,
    gint64 arg_Position);

  gboolean (*handle_stop) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_control) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_go_next) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_go_previous) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_pause) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_play) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_seek) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  const gchar * (*get_loop_status) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_maximum_rate) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  GVariant * (*get_metadata) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_minimum_rate) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  const gchar * (*get_playback_status) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gint64  (*get_position) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_rate) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_shuffle) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_volume) (gmpvmprisOrgMprisMediaPlayer2Player *object);

  void (*seeked) (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    gint64 arg_Position);

};

GType gmpv_mpris_org_mpris_media_player2_player_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gmpv_mpris_org_mpris_media_player2_player_interface_info (void);
guint gmpv_mpris_org_mpris_media_player2_player_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gmpv_mpris_org_mpris_media_player2_player_complete_next (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_previous (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_pause (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_play_pause (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_stop (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_play (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_seek (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_set_position (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void gmpv_mpris_org_mpris_media_player2_player_complete_open_uri (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void gmpv_mpris_org_mpris_media_player2_player_emit_seeked (
    gmpvmprisOrgMprisMediaPlayer2Player *object,
    gint64 arg_Position);



/* D-Bus method calls: */
void gmpv_mpris_org_mpris_media_player2_player_call_next (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_next_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_next_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_previous (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_previous_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_previous_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_pause (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_pause_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_pause_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_play_pause (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_play_pause_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_play_pause_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_stop (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_stop_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_stop_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_play (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_play_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_play_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_seek (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    gint64 arg_Offset,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_seek_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_seek_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    gint64 arg_Offset,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_set_position (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_TrackId,
    gint64 arg_Position,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_set_position_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_set_position_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_TrackId,
    gint64 arg_Position,
    GCancellable *cancellable,
    GError **error);

void gmpv_mpris_org_mpris_media_player2_player_call_open_uri (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_Uri,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_open_uri_finish (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gmpv_mpris_org_mpris_media_player2_player_call_open_uri_sync (
    gmpvmprisOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_Uri,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *gmpv_mpris_org_mpris_media_player2_player_get_playback_status (gmpvmprisOrgMprisMediaPlayer2Player *object);
gchar *gmpv_mpris_org_mpris_media_player2_player_dup_playback_status (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_playback_status (gmpvmprisOrgMprisMediaPlayer2Player *object, const gchar *value);

const gchar *gmpv_mpris_org_mpris_media_player2_player_get_loop_status (gmpvmprisOrgMprisMediaPlayer2Player *object);
gchar *gmpv_mpris_org_mpris_media_player2_player_dup_loop_status (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_loop_status (gmpvmprisOrgMprisMediaPlayer2Player *object, const gchar *value);

gdouble gmpv_mpris_org_mpris_media_player2_player_get_rate (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_rate (gmpvmprisOrgMprisMediaPlayer2Player *object, gdouble value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_shuffle (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_shuffle (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);

GVariant *gmpv_mpris_org_mpris_media_player2_player_get_metadata (gmpvmprisOrgMprisMediaPlayer2Player *object);
GVariant *gmpv_mpris_org_mpris_media_player2_player_dup_metadata (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_metadata (gmpvmprisOrgMprisMediaPlayer2Player *object, GVariant *value);

gdouble gmpv_mpris_org_mpris_media_player2_player_get_volume (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_volume (gmpvmprisOrgMprisMediaPlayer2Player *object, gdouble value);

gint64 gmpv_mpris_org_mpris_media_player2_player_get_position (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_position (gmpvmprisOrgMprisMediaPlayer2Player *object, gint64 value);

gdouble gmpv_mpris_org_mpris_media_player2_player_get_minimum_rate (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_minimum_rate (gmpvmprisOrgMprisMediaPlayer2Player *object, gdouble value);

gdouble gmpv_mpris_org_mpris_media_player2_player_get_maximum_rate (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_maximum_rate (gmpvmprisOrgMprisMediaPlayer2Player *object, gdouble value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_can_go_next (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_can_go_next (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_can_go_previous (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_can_go_previous (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_can_play (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_can_play (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_can_pause (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_can_pause (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_can_seek (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_can_seek (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean gmpv_mpris_org_mpris_media_player2_player_get_can_control (gmpvmprisOrgMprisMediaPlayer2Player *object);
void gmpv_mpris_org_mpris_media_player2_player_set_can_control (gmpvmprisOrgMprisMediaPlayer2Player *object, gboolean value);


/* ---- */

#define GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY (gmpv_mpris_org_mpris_media_player2_player_proxy_get_type ())
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY, gmpvmprisOrgMprisMediaPlayer2PlayerProxy))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY, gmpvmprisOrgMprisMediaPlayer2PlayerProxyClass))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY, gmpvmprisOrgMprisMediaPlayer2PlayerProxyClass))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY))

typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerProxy gmpvmprisOrgMprisMediaPlayer2PlayerProxy;
typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerProxyClass gmpvmprisOrgMprisMediaPlayer2PlayerProxyClass;
typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerProxyPrivate gmpvmprisOrgMprisMediaPlayer2PlayerProxyPrivate;

struct _gmpvmprisOrgMprisMediaPlayer2PlayerProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  gmpvmprisOrgMprisMediaPlayer2PlayerProxyPrivate *priv;
};

struct _gmpvmprisOrgMprisMediaPlayer2PlayerProxyClass
{
  GDBusProxyClass parent_class;
};

GType gmpv_mpris_org_mpris_media_player2_player_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (gmpvmprisOrgMprisMediaPlayer2PlayerProxy, g_object_unref)
#endif

void gmpv_mpris_org_mpris_media_player2_player_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
gmpvmprisOrgMprisMediaPlayer2Player *gmpv_mpris_org_mpris_media_player2_player_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
gmpvmprisOrgMprisMediaPlayer2Player *gmpv_mpris_org_mpris_media_player2_player_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gmpv_mpris_org_mpris_media_player2_player_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
gmpvmprisOrgMprisMediaPlayer2Player *gmpv_mpris_org_mpris_media_player2_player_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
gmpvmprisOrgMprisMediaPlayer2Player *gmpv_mpris_org_mpris_media_player2_player_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON (gmpv_mpris_org_mpris_media_player2_player_skeleton_get_type ())
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON, gmpvmprisOrgMprisMediaPlayer2PlayerSkeleton))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON, gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonClass))
#define GMPV_MPRIS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON, gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonClass))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON))
#define GMPV_MPRIS_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GMPV_MPRIS_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON))

typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerSkeleton gmpvmprisOrgMprisMediaPlayer2PlayerSkeleton;
typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonClass gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonClass;
typedef struct _gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonPrivate gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonPrivate;

struct _gmpvmprisOrgMprisMediaPlayer2PlayerSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonPrivate *priv;
};

struct _gmpvmprisOrgMprisMediaPlayer2PlayerSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gmpv_mpris_org_mpris_media_player2_player_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (gmpvmprisOrgMprisMediaPlayer2PlayerSkeleton, g_object_unref)
#endif

gmpvmprisOrgMprisMediaPlayer2Player *gmpv_mpris_org_mpris_media_player2_player_skeleton_new (void);


G_END_DECLS

#endif /* __MPRIS_GMPV_MPRIS_GDBUS_H__ */
